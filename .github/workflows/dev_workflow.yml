# This is a basic workflow to help you get started with Actions

name: CI/CD workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "dev" branch
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up QEMU (required for building image for linux/arm64/v8)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx (required for building image for linux/arm64/v8)
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build feelthenotes image and push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: feelthenotes
          platforms: linux/arm64/v8
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/feelthenotes:latest

#      - name: Build feelthenotes-bot image and push to Docker Hub
#        uses: docker/build-push-action@v3
#        with:
#          platforms: linux/arm64/v8
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/feelthenotes:latest

      - name: Copy docker-compose.yml to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ORACLE_HOST }}
          username: ${{ secrets.ORACLE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./docker-compose.yml"
          target: "."

      - name: Connect to remote server and compose up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ORACLE_HOST }}
          username: ${{ secrets.ORACLE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" > .env
            docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
            docker compose pull
            docker compose up -d --force-recreate
